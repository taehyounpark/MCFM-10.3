!
!  SPDX-License-Identifier: GPL-3.0-or-later
!  Copyright (C) 2019-2022, respective authors of MCFM.
!

      subroutine qqbZtt1(propz,wtqqb,wtqbq)
      implicit none
      include 'types.f'

c***********************************************************************
c     Author: R.K. Ellis                                               *
c     December, 2010.                                                  *
c     calculate the Born matrix element squared                        *
c     for the process                                                  *
c     My notation                                                      *
c     qb(-p1) + q(-p2)=bbar(p6)+e-(p7)+nubar(p8)+b(p5)+nu(p3)+e+(p4)   *
c                                                                      *
c q=3+4+5                                                              *
c a=-6-7-8                                                             *
c since momenta 3,5,6,8 are not needed they are reused to              *
c represent the de-massified vectors.                                  *
c Thus q4 = q de-massified wrt p4 ;                                    *
c Thus a7 = a de-massified wrt p7 etc;                                 *
c this vector has been stored in wrapper routine (qqbZtt) in p(3,mu)   *
c q4(mu)=q(mu)-qsq/2/p4Dq*p4(mu)-->p(3,mu)                             *
c a7(mu)=a(mu)-asq/2/p7Da*p7(mu)-->p(5,mu)                             *
c Formula generated by the program qqbZtt1.frm                         *
c First index of m is the qqb polarization                             *
c***********************************************************************
      include 'nf.f'
      include 'mxpart.f'
      include 'zcouple.f'
      include 'ewcharge.f'
      include 'zprods_com.f'
      include 'masses.f'
      include 'topzlabels.f'
      complex(dp):: mqqb(2),mqbq(2),propz
      real(dp):: wtqqb(2),wtqbq(2),mtsq
      integer:: h1,j,j12
c For charge and couplings of top quark, use up-charge
      j=2
      mtsq=mt**2
      do j12=1,2
      wtqbq(j12)=0._dp
      wtqqb(j12)=0._dp
      enddo
      do j12=1,2
      mqbq(1)=(Q(j)*Q(j12)+L(j12)*R(j)*propz)*za(p1,p7)*zb(p2,p4)*mtsq
     & -(Q(j)*Q(j12)+L(j)*L(j12)*propz)
     & *za(p1,q4)*za(p7,a7)*zb(p2,a7)*zb(p4,q4)

      mqbq(2)=(Q(j)*Q(j12)+R(j)*R(j12)*propz)*za(p2,p7)*zb(p1,p4)*mtsq
     & -(Q(j)*Q(j12)+L(j)*R(j12)*propz)
     & *za(p2,q4)*za(p7,a7)*zb(p1,a7)*zb(p4,q4)

      mqqb(1)=(Q(j)*Q(j12)+L(j12)*R(j)*propz)*za(p2,p7)*zb(p1,p4)*mtsq
     & -(Q(j)*Q(j12)+L(j)*L(j12)*propz)
     & *za(p2,q4)*za(p7,a7)*zb(p1,a7)*zb(p4,q4)

      mqqb(2)=(Q(j)*Q(j12)+R(j)*R(j12)*propz)*za(p1,p7)*zb(p2,p4)*mtsq
     & -(Q(j)*Q(j12)+L(j)*R(j12)*propz)
     & *za(p1,q4)*za(p7,a7)*zb(p2,a7)*zb(p4,q4)

      do h1=1,2
      wtqqb(j12)=wtqqb(j12)+abs(mqqb(h1))**2
      wtqbq(j12)=wtqbq(j12)+abs(mqbq(h1))**2
      enddo
      enddo
      return
      end
